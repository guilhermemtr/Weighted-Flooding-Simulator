<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 5.0.0 (0)
 -->
<!-- Title: abstract_receive_protocol_simulator Pages: 1 -->
<!--zoomable 935 -->
<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="text/javascript"><![CDATA[
var edges = document.getElementsByTagName('g');
if (edges && edges.length) {
  for (var i=0;i<edges.length;i++) {
    if (edges[i].id.substr(0,4)=='edge') {
      edges[i].setAttribute('class','edge');
    }
  }
}
]]></script>
        <defs>
                <circle id="rim" cx="0" cy="0" r="7"/>
                <circle id="rim2" cx="0" cy="0" r="3.5"/>
                <g id="zoomPlus">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomplus.mouseover" end="zoomplus.mouseout"/>
                        </use>
                        <path d="M-4,0h8M0,-4v8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="zoomMin">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomminus.mouseover" end="zoomminus.mouseout"/>
                        </use>
                        <path d="M-4,0h8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="dirArrow">
                        <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
               <g id="resetDef">
                       <use xlink:href="#rim2" fill="#404040">
                               <set attributeName="fill" to="#808080" begin="reset.mouseover" end="reset.mouseout"/>
                       </use>
               </g>
        </defs>

<script type="text/javascript">
var viewWidth = 292;
var viewHeight = 935;
var sectionId = 'dynsection-1';
</script>
<script xlink:href="../../svgpan.js"/>
<svg id="graph" class="graph">
<g id="viewport">
<title>abstract_receive_protocol_simulator</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-931 288,-931 288,4 -4,4"/>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title=" ">
<polygon fill="#bfbfbf" stroke="black" points="9.5,-0.5 9.5,-219.5 274.5,-219.5 274.5,-0.5 9.5,-0.5"/>
<text text-anchor="middle" x="142" y="-205.9" font-family="Helvetica,sans-Serif" font-size="12.00">abstract_receive_protocol_simulator</text>
<polyline fill="none" stroke="black" points="9.5,-198.5 274.5,-198.5 "/>
<text text-anchor="start" x="17.5" y="-184.9" font-family="Helvetica,sans-Serif" font-size="12.00"># std::vector&lt; std::vector&lt; party</text>
<text text-anchor="start" x="17.5" y="-171.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t &gt; &gt; requesters</text>
<polyline fill="none" stroke="black" points="9.5,-164.5 274.5,-164.5 "/>
<text text-anchor="start" x="17.5" y="-150.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ abstract_receive_protocol_simulator</text>
<text text-anchor="start" x="17.5" y="-137.9" font-family="Helvetica,sans-Serif" font-size="12.00">(std::vector&lt; stake_t &gt; stakes)</text>
<text text-anchor="start" x="17.5" y="-124.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ ~abstract_receive_protocol_simulator()</text>
<text text-anchor="start" x="17.5" y="-111.9" font-family="Helvetica,sans-Serif" font-size="12.00"># counter_t handle_all_requests()</text>
<text text-anchor="start" x="17.5" y="-98.9" font-family="Helvetica,sans-Serif" font-size="12.00"># virtual counter_t handle_requests</text>
<text text-anchor="start" x="17.5" y="-85.9" font-family="Helvetica,sans-Serif" font-size="12.00">(party_t i)=0</text>
<text text-anchor="start" x="17.5" y="-72.9" font-family="Helvetica,sans-Serif" font-size="12.00"># counter_t request(party_t requester)</text>
<text text-anchor="start" x="17.5" y="-59.9" font-family="Helvetica,sans-Serif" font-size="12.00"># counter_t make_requests()</text>
<text text-anchor="start" x="17.5" y="-46.9" font-family="Helvetica,sans-Serif" font-size="12.00"># virtual std::vector&lt; party_t &gt; get</text>
<text text-anchor="start" x="17.5" y="-33.9" font-family="Helvetica,sans-Serif" font-size="12.00">_request_targets(party_t requester)=0</text>
<text text-anchor="start" x="17.5" y="-20.9" font-family="Helvetica,sans-Serif" font-size="12.00"># virtual std::pair&lt; counter_t, bool</text>
<text text-anchor="start" x="17.5" y="-7.9" font-family="Helvetica,sans-Serif" font-size="12.00"> &gt; protocol_round() override</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../df/dcc/classcorruptions__stake__protocol__simulator.html" target="_top" xlink:title="Abstract class for protocol simulators with stake and corruptions.">
<polygon fill="white" stroke="black" points="0,-256.5 0,-579.5 284,-579.5 284,-256.5 0,-256.5"/>
<text text-anchor="middle" x="142" y="-565.9" font-family="Helvetica,sans-Serif" font-size="12.00">corruptions_stake_protocol_simulator</text>
<polyline fill="none" stroke="black" points="0,-558.5 284,-558.5 "/>
<text text-anchor="start" x="8" y="-544.9" font-family="Helvetica,sans-Serif" font-size="12.00"># std::vector&lt; stake_t &gt; stakes</text>
<text text-anchor="start" x="8" y="-531.9" font-family="Helvetica,sans-Serif" font-size="12.00"># stake_t total_stake</text>
<text text-anchor="start" x="8" y="-518.9" font-family="Helvetica,sans-Serif" font-size="12.00"># std::vector&lt; corruption_t &gt; corrupted</text>
<polyline fill="none" stroke="black" points="0,-511.5 284,-511.5 "/>
<text text-anchor="start" x="8" y="-497.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ corruptions_stake_protocol_simulator</text>
<text text-anchor="start" x="8" y="-484.9" font-family="Helvetica,sans-Serif" font-size="12.00">(std::vector&lt; stake_t &gt; stakes)</text>
<text text-anchor="start" x="8" y="-471.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ virtual ~corruptions_stake_protocol</text>
<text text-anchor="start" x="8" y="-458.9" font-family="Helvetica,sans-Serif" font-size="12.00">_simulator()</text>
<text text-anchor="start" x="8" y="-445.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ std::vector&lt; stake_t &gt; get_stakes()</text>
<text text-anchor="start" x="8" y="-432.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ stake_t get_total_stake()</text>
<text text-anchor="start" x="8" y="-419.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ std::vector&lt; corruption_t &gt; get</text>
<text text-anchor="start" x="8" y="-406.9" font-family="Helvetica,sans-Serif" font-size="12.00">_corrupted()</text>
<text text-anchor="start" x="8" y="-393.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ corruption_t is_corrupted(party_t i)</text>
<text text-anchor="start" x="8" y="-380.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void corrupt_parties(std::vector</text>
<text text-anchor="start" x="8" y="-367.9" font-family="Helvetica,sans-Serif" font-size="12.00">&lt; corruption_t &gt; corrupted)</text>
<text text-anchor="start" x="8" y="-354.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ virtual round_t get_latency()</text>
<text text-anchor="start" x="8" y="-341.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ virtual bool all_got_msg()</text>
<text text-anchor="start" x="8" y="-328.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ virtual void adversary(party_t i,</text>
<text text-anchor="start" x="8" y="-315.9" font-family="Helvetica,sans-Serif" font-size="12.00"> adversary_phase phase)</text>
<text text-anchor="start" x="8" y="-302.9" font-family="Helvetica,sans-Serif" font-size="12.00"># party_t owner_of(stake_t c)</text>
<text text-anchor="start" x="8" y="-289.9" font-family="Helvetica,sans-Serif" font-size="12.00"># virtual std::pair&lt; counter_t, bool &gt; round()</text>
<text text-anchor="start" x="8" y="-276.9" font-family="Helvetica,sans-Serif" font-size="12.00"># virtual std::pair&lt; counter_t, bool</text>
<text text-anchor="start" x="8" y="-263.9" font-family="Helvetica,sans-Serif" font-size="12.00"> &gt; protocol_round()=0</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M142,-246.22C142,-237.25 142,-228.36 142,-219.68"/>
<polygon fill="none" stroke="midnightblue" points="138.5,-246.38 142,-256.38 145.5,-246.38 138.5,-246.38"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="../../da/d73/classprotocol__simulator.html" target="_top" xlink:title="Abstract class for protocol simulators.">
<polygon fill="white" stroke="black" points="9,-616.5 9,-926.5 275,-926.5 275,-616.5 9,-616.5"/>
<text text-anchor="middle" x="142" y="-912.9" font-family="Helvetica,sans-Serif" font-size="12.00">protocol_simulator</text>
<polyline fill="none" stroke="black" points="9,-905.5 275,-905.5 "/>
<text text-anchor="start" x="17" y="-891.9" font-family="Helvetica,sans-Serif" font-size="12.00"># party_t nr_parties</text>
<text text-anchor="start" x="17" y="-878.9" font-family="Helvetica,sans-Serif" font-size="12.00"># round_t curr_round</text>
<text text-anchor="start" x="17" y="-865.9" font-family="Helvetica,sans-Serif" font-size="12.00"># std::vector&lt; counter_t &gt; nr_messages</text>
<text text-anchor="start" x="17" y="-852.9" font-family="Helvetica,sans-Serif" font-size="12.00"># std::vector&lt; round_t &gt; got_msg</text>
<polyline fill="none" stroke="black" points="9,-845.5 275,-845.5 "/>
<text text-anchor="start" x="17" y="-831.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ protocol_simulator(party_t nr_parties)</text>
<text text-anchor="start" x="17" y="-818.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ virtual ~protocol_simulator()</text>
<text text-anchor="start" x="17" y="-805.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ virtual round_t get_latency()</text>
<text text-anchor="start" x="17" y="-792.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ virtual party_t get_nr_parties(round_t r)</text>
<text text-anchor="start" x="17" y="-779.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ party_t get_nr_parties()</text>
<text text-anchor="start" x="17" y="-766.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ virtual bool all_got_msg()</text>
<text text-anchor="start" x="17" y="-753.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ std::vector&lt; round_t &gt; get_got_msg()</text>
<text text-anchor="start" x="17" y="-740.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool receive(party_t receiver)</text>
<text text-anchor="start" x="17" y="-727.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool has_received(party_t receiver)</text>
<text text-anchor="start" x="17" y="-714.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ virtual void set_sender(party_t sender)</text>
<text text-anchor="start" x="17" y="-701.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ virtual std::vector&lt; counter_t &gt;</text>
<text text-anchor="start" x="17" y="-688.9" font-family="Helvetica,sans-Serif" font-size="12.00"> get_nr_messages_per_round()</text>
<text text-anchor="start" x="17" y="-675.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ virtual counter_t get_nr_messages()</text>
<text text-anchor="start" x="17" y="-662.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ virtual bool execute_protocol(round</text>
<text text-anchor="start" x="17" y="-649.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t bound=ROUND_T_MAX)</text>
<text text-anchor="start" x="17" y="-636.9" font-family="Helvetica,sans-Serif" font-size="12.00"># virtual std::pair&lt; counter_t, bool</text>
<text text-anchor="start" x="17" y="-623.9" font-family="Helvetica,sans-Serif" font-size="12.00"> &gt; round()=0</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M142,-606.31C142,-597.43 142,-588.5 142,-579.62"/>
<polygon fill="none" stroke="midnightblue" points="138.5,-606.33 142,-616.33 145.5,-606.33 138.5,-606.33"/>
</g>
</g>
</svg>
        <g id="navigator" transform="translate(0 0)" fill="#404254">
                <rect fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width=".5" x="0" y="0" width="60" height="60"/>
                <use id="zoomplus" xlink:href="#zoomPlus" x="17" y="9" onmousedown="handleZoom(evt,'in')"/>
                <use id="zoomminus" xlink:href="#zoomMin" x="42" y="9" onmousedown="handleZoom(evt,'out')"/>
                <use id="reset" xlink:href="#resetDef" x="30" y="36" onmousedown="handleReset()"/>
                <g id="arrowUp" xlink:href="#dirArrow" transform="translate(30 24)" onmousedown="handlePan(0,-1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowUp.mouseover" end="arrowUp.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowRight" xlink:href="#dirArrow" transform="rotate(90) translate(36 -43)" onmousedown="handlePan(1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowRight.mouseover" end="arrowRight.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowDown" xlink:href="#dirArrow" transform="rotate(180) translate(-30 -48)" onmousedown="handlePan(0,1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowDown.mouseover" end="arrowDown.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowLeft" xlink:href="#dirArrow" transform="rotate(270) translate(-36 17)" onmousedown="handlePan(-1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowLeft.mouseover" end="arrowLeft.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
        </g>
        <svg viewBox="0 0 15 15" width="100%" height="30px" preserveAspectRatio="xMaxYMin meet">
         <g id="arrow_out" transform="scale(0.3 0.3)">
          <a xlink:href="classabstract__receive__protocol__simulator__coll__graph_org.svg" target="_base">
           <rect id="button" ry="5" rx="5" y="6" x="6" height="38" width="38"
                fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width="1.0"/>
           <path id="arrow"
             d="M 11.500037,31.436501 C 11.940474,20.09759 22.043105,11.32322 32.158766,21.979434 L 37.068811,17.246167 C 37.068811,17.246167 37.088388,32 37.088388,32 L 22.160133,31.978069 C 22.160133,31.978069 26.997745,27.140456 26.997745,27.140456 C 18.528582,18.264221 13.291696,25.230495 11.500037,31.436501 z"
             style="fill:#404040;"/>
          </a>
         </g>
        </svg>
</svg>
