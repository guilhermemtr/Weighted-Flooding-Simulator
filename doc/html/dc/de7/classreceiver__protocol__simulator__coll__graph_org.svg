<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 5.0.0 (0)
 -->
<!-- Title: receiver_protocol_simulator Pages: 1 -->
<svg width="292pt" height="1230pt"
 viewBox="0.00 0.00 292.00 1230.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1226)">
<title>receiver_protocol_simulator</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-1226 288,-1226 288,4 -4,4"/>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title=" ">
<polygon fill="#bfbfbf" stroke="black" points="14.5,-0.5 14.5,-258.5 269.5,-258.5 269.5,-0.5 14.5,-0.5"/>
<text text-anchor="middle" x="142" y="-244.9" font-family="Helvetica,sans-Serif" font-size="12.00">receiver_protocol_simulator</text>
<polyline fill="none" stroke="black" points="14.5,-237.5 269.5,-237.5 "/>
<text text-anchor="start" x="22.5" y="-223.9" font-family="Helvetica,sans-Serif" font-size="12.00"># std::mt19937_64 * re</text>
<text text-anchor="start" x="22.5" y="-210.9" font-family="Helvetica,sans-Serif" font-size="12.00"># std::uniform_int_distribution&lt; party</text>
<text text-anchor="start" x="22.5" y="-197.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t &gt; unif_coin</text>
<text text-anchor="start" x="22.5" y="-184.9" font-family="Helvetica,sans-Serif" font-size="12.00"># std::function&lt; size_t(party_t)&gt;</text>
<text text-anchor="start" x="22.5" y="-171.9" font-family="Helvetica,sans-Serif" font-size="12.00"> get_nr_requests</text>
<text text-anchor="start" x="22.5" y="-158.9" font-family="Helvetica,sans-Serif" font-size="12.00"># std::function&lt; size_t(party_t)&gt;</text>
<text text-anchor="start" x="22.5" y="-145.9" font-family="Helvetica,sans-Serif" font-size="12.00"> get_nr_requests_to_handle</text>
<polyline fill="none" stroke="black" points="14.5,-138.5 269.5,-138.5 "/>
<text text-anchor="start" x="22.5" y="-124.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ receiver_protocol_simulator(std</text>
<text text-anchor="start" x="22.5" y="-111.9" font-family="Helvetica,sans-Serif" font-size="12.00">::function&lt; size_t(party_t)&gt; get</text>
<text text-anchor="start" x="22.5" y="-98.9" font-family="Helvetica,sans-Serif" font-size="12.00">_nr_requests, std::function&lt; size</text>
<text text-anchor="start" x="22.5" y="-85.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t(party_t)&gt; get_nr_requests_to_handle,</text>
<text text-anchor="start" x="22.5" y="-72.9" font-family="Helvetica,sans-Serif" font-size="12.00"> std::vector&lt; stake_t &gt; stakes)</text>
<text text-anchor="start" x="22.5" y="-59.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ ~receiver_protocol_simulator()</text>
<text text-anchor="start" x="22.5" y="-46.9" font-family="Helvetica,sans-Serif" font-size="12.00"># party_t request(party_t requester)</text>
<text text-anchor="start" x="22.5" y="-33.9" font-family="Helvetica,sans-Serif" font-size="12.00"># counter_t handle_requests(party_t i)</text>
<text text-anchor="start" x="22.5" y="-20.9" font-family="Helvetica,sans-Serif" font-size="12.00"># std::vector&lt; party_t &gt; get_request</text>
<text text-anchor="start" x="22.5" y="-7.9" font-family="Helvetica,sans-Serif" font-size="12.00">_targets(party_t requester)</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../d6/d8a/classabstract__receive__protocol__simulator.html" target="_top" xlink:title=" ">
<polygon fill="white" stroke="black" points="9.5,-295.5 9.5,-514.5 274.5,-514.5 274.5,-295.5 9.5,-295.5"/>
<text text-anchor="middle" x="142" y="-500.9" font-family="Helvetica,sans-Serif" font-size="12.00">abstract_receive_protocol_simulator</text>
<polyline fill="none" stroke="black" points="9.5,-493.5 274.5,-493.5 "/>
<text text-anchor="start" x="17.5" y="-479.9" font-family="Helvetica,sans-Serif" font-size="12.00"># std::vector&lt; std::vector&lt; party</text>
<text text-anchor="start" x="17.5" y="-466.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t &gt; &gt; requesters</text>
<polyline fill="none" stroke="black" points="9.5,-459.5 274.5,-459.5 "/>
<text text-anchor="start" x="17.5" y="-445.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ abstract_receive_protocol_simulator</text>
<text text-anchor="start" x="17.5" y="-432.9" font-family="Helvetica,sans-Serif" font-size="12.00">(std::vector&lt; stake_t &gt; stakes)</text>
<text text-anchor="start" x="17.5" y="-419.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ ~abstract_receive_protocol_simulator()</text>
<text text-anchor="start" x="17.5" y="-406.9" font-family="Helvetica,sans-Serif" font-size="12.00"># counter_t handle_all_requests()</text>
<text text-anchor="start" x="17.5" y="-393.9" font-family="Helvetica,sans-Serif" font-size="12.00"># virtual counter_t handle_requests</text>
<text text-anchor="start" x="17.5" y="-380.9" font-family="Helvetica,sans-Serif" font-size="12.00">(party_t i)=0</text>
<text text-anchor="start" x="17.5" y="-367.9" font-family="Helvetica,sans-Serif" font-size="12.00"># counter_t request(party_t requester)</text>
<text text-anchor="start" x="17.5" y="-354.9" font-family="Helvetica,sans-Serif" font-size="12.00"># counter_t make_requests()</text>
<text text-anchor="start" x="17.5" y="-341.9" font-family="Helvetica,sans-Serif" font-size="12.00"># virtual std::vector&lt; party_t &gt; get</text>
<text text-anchor="start" x="17.5" y="-328.9" font-family="Helvetica,sans-Serif" font-size="12.00">_request_targets(party_t requester)=0</text>
<text text-anchor="start" x="17.5" y="-315.9" font-family="Helvetica,sans-Serif" font-size="12.00"># virtual std::pair&lt; counter_t, bool</text>
<text text-anchor="start" x="17.5" y="-302.9" font-family="Helvetica,sans-Serif" font-size="12.00"> &gt; protocol_round() override</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M142,-285C142,-276.34 142,-267.58 142,-258.87"/>
<polygon fill="none" stroke="midnightblue" points="138.5,-285.12 142,-295.12 145.5,-285.12 138.5,-285.12"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="../../df/dcc/classcorruptions__stake__protocol__simulator.html" target="_top" xlink:title="Abstract class for protocol simulators with stake and corruptions.">
<polygon fill="white" stroke="black" points="0,-551.5 0,-874.5 284,-874.5 284,-551.5 0,-551.5"/>
<text text-anchor="middle" x="142" y="-860.9" font-family="Helvetica,sans-Serif" font-size="12.00">corruptions_stake_protocol_simulator</text>
<polyline fill="none" stroke="black" points="0,-853.5 284,-853.5 "/>
<text text-anchor="start" x="8" y="-839.9" font-family="Helvetica,sans-Serif" font-size="12.00"># std::vector&lt; stake_t &gt; stakes</text>
<text text-anchor="start" x="8" y="-826.9" font-family="Helvetica,sans-Serif" font-size="12.00"># stake_t total_stake</text>
<text text-anchor="start" x="8" y="-813.9" font-family="Helvetica,sans-Serif" font-size="12.00"># std::vector&lt; corruption_t &gt; corrupted</text>
<polyline fill="none" stroke="black" points="0,-806.5 284,-806.5 "/>
<text text-anchor="start" x="8" y="-792.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ corruptions_stake_protocol_simulator</text>
<text text-anchor="start" x="8" y="-779.9" font-family="Helvetica,sans-Serif" font-size="12.00">(std::vector&lt; stake_t &gt; stakes)</text>
<text text-anchor="start" x="8" y="-766.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ virtual ~corruptions_stake_protocol</text>
<text text-anchor="start" x="8" y="-753.9" font-family="Helvetica,sans-Serif" font-size="12.00">_simulator()</text>
<text text-anchor="start" x="8" y="-740.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ std::vector&lt; stake_t &gt; get_stakes()</text>
<text text-anchor="start" x="8" y="-727.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ stake_t get_total_stake()</text>
<text text-anchor="start" x="8" y="-714.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ std::vector&lt; corruption_t &gt; get</text>
<text text-anchor="start" x="8" y="-701.9" font-family="Helvetica,sans-Serif" font-size="12.00">_corrupted()</text>
<text text-anchor="start" x="8" y="-688.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ corruption_t is_corrupted(party_t i)</text>
<text text-anchor="start" x="8" y="-675.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void corrupt_parties(std::vector</text>
<text text-anchor="start" x="8" y="-662.9" font-family="Helvetica,sans-Serif" font-size="12.00">&lt; corruption_t &gt; corrupted)</text>
<text text-anchor="start" x="8" y="-649.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ virtual round_t get_latency()</text>
<text text-anchor="start" x="8" y="-636.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ virtual bool all_got_msg()</text>
<text text-anchor="start" x="8" y="-623.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ virtual void adversary(party_t i,</text>
<text text-anchor="start" x="8" y="-610.9" font-family="Helvetica,sans-Serif" font-size="12.00"> adversary_phase phase)</text>
<text text-anchor="start" x="8" y="-597.9" font-family="Helvetica,sans-Serif" font-size="12.00"># party_t owner_of(stake_t c)</text>
<text text-anchor="start" x="8" y="-584.9" font-family="Helvetica,sans-Serif" font-size="12.00"># virtual std::pair&lt; counter_t, bool &gt; round()</text>
<text text-anchor="start" x="8" y="-571.9" font-family="Helvetica,sans-Serif" font-size="12.00"># virtual std::pair&lt; counter_t, bool</text>
<text text-anchor="start" x="8" y="-558.9" font-family="Helvetica,sans-Serif" font-size="12.00"> &gt; protocol_round()=0</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M142,-541.22C142,-532.25 142,-523.36 142,-514.68"/>
<polygon fill="none" stroke="midnightblue" points="138.5,-541.38 142,-551.38 145.5,-541.38 138.5,-541.38"/>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="../../da/d73/classprotocol__simulator.html" target="_top" xlink:title="Abstract class for protocol simulators.">
<polygon fill="white" stroke="black" points="9,-911.5 9,-1221.5 275,-1221.5 275,-911.5 9,-911.5"/>
<text text-anchor="middle" x="142" y="-1207.9" font-family="Helvetica,sans-Serif" font-size="12.00">protocol_simulator</text>
<polyline fill="none" stroke="black" points="9,-1200.5 275,-1200.5 "/>
<text text-anchor="start" x="17" y="-1186.9" font-family="Helvetica,sans-Serif" font-size="12.00"># party_t nr_parties</text>
<text text-anchor="start" x="17" y="-1173.9" font-family="Helvetica,sans-Serif" font-size="12.00"># round_t curr_round</text>
<text text-anchor="start" x="17" y="-1160.9" font-family="Helvetica,sans-Serif" font-size="12.00"># std::vector&lt; counter_t &gt; nr_messages</text>
<text text-anchor="start" x="17" y="-1147.9" font-family="Helvetica,sans-Serif" font-size="12.00"># std::vector&lt; round_t &gt; got_msg</text>
<polyline fill="none" stroke="black" points="9,-1140.5 275,-1140.5 "/>
<text text-anchor="start" x="17" y="-1126.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ protocol_simulator(party_t nr_parties)</text>
<text text-anchor="start" x="17" y="-1113.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ virtual ~protocol_simulator()</text>
<text text-anchor="start" x="17" y="-1100.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ virtual round_t get_latency()</text>
<text text-anchor="start" x="17" y="-1087.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ virtual party_t get_nr_parties(round_t r)</text>
<text text-anchor="start" x="17" y="-1074.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ party_t get_nr_parties()</text>
<text text-anchor="start" x="17" y="-1061.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ virtual bool all_got_msg()</text>
<text text-anchor="start" x="17" y="-1048.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ std::vector&lt; round_t &gt; get_got_msg()</text>
<text text-anchor="start" x="17" y="-1035.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool receive(party_t receiver)</text>
<text text-anchor="start" x="17" y="-1022.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool has_received(party_t receiver)</text>
<text text-anchor="start" x="17" y="-1009.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ virtual void set_sender(party_t sender)</text>
<text text-anchor="start" x="17" y="-996.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ virtual std::vector&lt; counter_t &gt;</text>
<text text-anchor="start" x="17" y="-983.9" font-family="Helvetica,sans-Serif" font-size="12.00"> get_nr_messages_per_round()</text>
<text text-anchor="start" x="17" y="-970.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ virtual counter_t get_nr_messages()</text>
<text text-anchor="start" x="17" y="-957.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ virtual bool execute_protocol(round</text>
<text text-anchor="start" x="17" y="-944.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t bound=ROUND_T_MAX)</text>
<text text-anchor="start" x="17" y="-931.9" font-family="Helvetica,sans-Serif" font-size="12.00"># virtual std::pair&lt; counter_t, bool</text>
<text text-anchor="start" x="17" y="-918.9" font-family="Helvetica,sans-Serif" font-size="12.00"> &gt; round()=0</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node3 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node3</title>
<path fill="none" stroke="midnightblue" d="M142,-901.31C142,-892.43 142,-883.5 142,-874.62"/>
<polygon fill="none" stroke="midnightblue" points="138.5,-901.33 142,-911.33 145.5,-901.33 138.5,-901.33"/>
</g>
</g>
</svg>
