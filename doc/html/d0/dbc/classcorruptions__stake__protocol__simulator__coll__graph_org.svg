<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 5.0.0 (0)
 -->
<!-- Title: corruptions_stake_protocol_simulator Pages: 1 -->
<svg width="292pt" height="679pt"
 viewBox="0.00 0.00 292.00 679.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 675)">
<title>corruptions_stake_protocol_simulator</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-675 288,-675 288,4 -4,4"/>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Abstract class for protocol simulators with stake and corruptions.">
<polygon fill="#bfbfbf" stroke="black" points="0,-0.5 0,-323.5 284,-323.5 284,-0.5 0,-0.5"/>
<text text-anchor="middle" x="142" y="-309.9" font-family="Helvetica,sans-Serif" font-size="12.00">corruptions_stake_protocol_simulator</text>
<polyline fill="none" stroke="black" points="0,-302.5 284,-302.5 "/>
<text text-anchor="start" x="8" y="-288.9" font-family="Helvetica,sans-Serif" font-size="12.00"># std::vector&lt; stake_t &gt; stakes</text>
<text text-anchor="start" x="8" y="-275.9" font-family="Helvetica,sans-Serif" font-size="12.00"># stake_t total_stake</text>
<text text-anchor="start" x="8" y="-262.9" font-family="Helvetica,sans-Serif" font-size="12.00"># std::vector&lt; corruption_t &gt; corrupted</text>
<polyline fill="none" stroke="black" points="0,-255.5 284,-255.5 "/>
<text text-anchor="start" x="8" y="-241.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ corruptions_stake_protocol_simulator</text>
<text text-anchor="start" x="8" y="-228.9" font-family="Helvetica,sans-Serif" font-size="12.00">(std::vector&lt; stake_t &gt; stakes)</text>
<text text-anchor="start" x="8" y="-215.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ virtual ~corruptions_stake_protocol</text>
<text text-anchor="start" x="8" y="-202.9" font-family="Helvetica,sans-Serif" font-size="12.00">_simulator()</text>
<text text-anchor="start" x="8" y="-189.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ std::vector&lt; stake_t &gt; get_stakes()</text>
<text text-anchor="start" x="8" y="-176.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ stake_t get_total_stake()</text>
<text text-anchor="start" x="8" y="-163.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ std::vector&lt; corruption_t &gt; get</text>
<text text-anchor="start" x="8" y="-150.9" font-family="Helvetica,sans-Serif" font-size="12.00">_corrupted()</text>
<text text-anchor="start" x="8" y="-137.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ corruption_t is_corrupted(party_t i)</text>
<text text-anchor="start" x="8" y="-124.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void corrupt_parties(std::vector</text>
<text text-anchor="start" x="8" y="-111.9" font-family="Helvetica,sans-Serif" font-size="12.00">&lt; corruption_t &gt; corrupted)</text>
<text text-anchor="start" x="8" y="-98.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ virtual round_t get_latency()</text>
<text text-anchor="start" x="8" y="-85.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ virtual bool all_got_msg()</text>
<text text-anchor="start" x="8" y="-72.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ virtual void adversary(party_t i,</text>
<text text-anchor="start" x="8" y="-59.9" font-family="Helvetica,sans-Serif" font-size="12.00"> adversary_phase phase)</text>
<text text-anchor="start" x="8" y="-46.9" font-family="Helvetica,sans-Serif" font-size="12.00"># party_t owner_of(stake_t c)</text>
<text text-anchor="start" x="8" y="-33.9" font-family="Helvetica,sans-Serif" font-size="12.00"># virtual std::pair&lt; counter_t, bool &gt; round()</text>
<text text-anchor="start" x="8" y="-20.9" font-family="Helvetica,sans-Serif" font-size="12.00"># virtual std::pair&lt; counter_t, bool</text>
<text text-anchor="start" x="8" y="-7.9" font-family="Helvetica,sans-Serif" font-size="12.00"> &gt; protocol_round()=0</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../da/d73/classprotocol__simulator.html" target="_top" xlink:title="Abstract class for protocol simulators.">
<polygon fill="white" stroke="black" points="9,-360.5 9,-670.5 275,-670.5 275,-360.5 9,-360.5"/>
<text text-anchor="middle" x="142" y="-656.9" font-family="Helvetica,sans-Serif" font-size="12.00">protocol_simulator</text>
<polyline fill="none" stroke="black" points="9,-649.5 275,-649.5 "/>
<text text-anchor="start" x="17" y="-635.9" font-family="Helvetica,sans-Serif" font-size="12.00"># party_t nr_parties</text>
<text text-anchor="start" x="17" y="-622.9" font-family="Helvetica,sans-Serif" font-size="12.00"># round_t curr_round</text>
<text text-anchor="start" x="17" y="-609.9" font-family="Helvetica,sans-Serif" font-size="12.00"># std::vector&lt; counter_t &gt; nr_messages</text>
<text text-anchor="start" x="17" y="-596.9" font-family="Helvetica,sans-Serif" font-size="12.00"># std::vector&lt; round_t &gt; got_msg</text>
<polyline fill="none" stroke="black" points="9,-589.5 275,-589.5 "/>
<text text-anchor="start" x="17" y="-575.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ protocol_simulator(party_t nr_parties)</text>
<text text-anchor="start" x="17" y="-562.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ virtual ~protocol_simulator()</text>
<text text-anchor="start" x="17" y="-549.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ virtual round_t get_latency()</text>
<text text-anchor="start" x="17" y="-536.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ virtual party_t get_nr_parties(round_t r)</text>
<text text-anchor="start" x="17" y="-523.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ party_t get_nr_parties()</text>
<text text-anchor="start" x="17" y="-510.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ virtual bool all_got_msg()</text>
<text text-anchor="start" x="17" y="-497.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ std::vector&lt; round_t &gt; get_got_msg()</text>
<text text-anchor="start" x="17" y="-484.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool receive(party_t receiver)</text>
<text text-anchor="start" x="17" y="-471.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool has_received(party_t receiver)</text>
<text text-anchor="start" x="17" y="-458.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ virtual void set_sender(party_t sender)</text>
<text text-anchor="start" x="17" y="-445.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ virtual std::vector&lt; counter_t &gt;</text>
<text text-anchor="start" x="17" y="-432.9" font-family="Helvetica,sans-Serif" font-size="12.00"> get_nr_messages_per_round()</text>
<text text-anchor="start" x="17" y="-419.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ virtual counter_t get_nr_messages()</text>
<text text-anchor="start" x="17" y="-406.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ virtual bool execute_protocol(round</text>
<text text-anchor="start" x="17" y="-393.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t bound=ROUND_T_MAX)</text>
<text text-anchor="start" x="17" y="-380.9" font-family="Helvetica,sans-Serif" font-size="12.00"># virtual std::pair&lt; counter_t, bool</text>
<text text-anchor="start" x="17" y="-367.9" font-family="Helvetica,sans-Serif" font-size="12.00"> &gt; round()=0</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M142,-350.31C142,-341.43 142,-332.5 142,-323.62"/>
<polygon fill="none" stroke="midnightblue" points="138.5,-350.33 142,-360.33 145.5,-350.33 138.5,-350.33"/>
</g>
</g>
</svg>
