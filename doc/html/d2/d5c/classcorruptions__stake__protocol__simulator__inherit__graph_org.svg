<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 5.0.0 (0)
 -->
<!-- Title: corruptions_stake_protocol_simulator Pages: 1 -->
<svg width="818pt" height="1564pt"
 viewBox="0.00 0.00 817.50 1564.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1560)">
<title>corruptions_stake_protocol_simulator</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-1560 813.5,-1560 813.5,4 -4,4"/>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Abstract class for protocol simulators with stake and corruptions.">
<polygon fill="#bfbfbf" stroke="black" points="383,-885.5 383,-1208.5 667,-1208.5 667,-885.5 383,-885.5"/>
<text text-anchor="middle" x="525" y="-1194.9" font-family="Helvetica,sans-Serif" font-size="12.00">corruptions_stake_protocol_simulator</text>
<polyline fill="none" stroke="black" points="383,-1187.5 667,-1187.5 "/>
<text text-anchor="start" x="391" y="-1173.9" font-family="Helvetica,sans-Serif" font-size="12.00"># std::vector&lt; stake_t &gt; stakes</text>
<text text-anchor="start" x="391" y="-1160.9" font-family="Helvetica,sans-Serif" font-size="12.00"># stake_t total_stake</text>
<text text-anchor="start" x="391" y="-1147.9" font-family="Helvetica,sans-Serif" font-size="12.00"># std::vector&lt; corruption_t &gt; corrupted</text>
<polyline fill="none" stroke="black" points="383,-1140.5 667,-1140.5 "/>
<text text-anchor="start" x="391" y="-1126.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ corruptions_stake_protocol_simulator</text>
<text text-anchor="start" x="391" y="-1113.9" font-family="Helvetica,sans-Serif" font-size="12.00">(std::vector&lt; stake_t &gt; stakes)</text>
<text text-anchor="start" x="391" y="-1100.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ virtual ~corruptions_stake_protocol</text>
<text text-anchor="start" x="391" y="-1087.9" font-family="Helvetica,sans-Serif" font-size="12.00">_simulator()</text>
<text text-anchor="start" x="391" y="-1074.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ std::vector&lt; stake_t &gt; get_stakes()</text>
<text text-anchor="start" x="391" y="-1061.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ stake_t get_total_stake()</text>
<text text-anchor="start" x="391" y="-1048.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ std::vector&lt; corruption_t &gt; get</text>
<text text-anchor="start" x="391" y="-1035.9" font-family="Helvetica,sans-Serif" font-size="12.00">_corrupted()</text>
<text text-anchor="start" x="391" y="-1022.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ corruption_t is_corrupted(party_t i)</text>
<text text-anchor="start" x="391" y="-1009.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void corrupt_parties(std::vector</text>
<text text-anchor="start" x="391" y="-996.9" font-family="Helvetica,sans-Serif" font-size="12.00">&lt; corruption_t &gt; corrupted)</text>
<text text-anchor="start" x="391" y="-983.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ virtual round_t get_latency()</text>
<text text-anchor="start" x="391" y="-970.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ virtual bool all_got_msg()</text>
<text text-anchor="start" x="391" y="-957.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ virtual void adversary(party_t i,</text>
<text text-anchor="start" x="391" y="-944.9" font-family="Helvetica,sans-Serif" font-size="12.00"> adversary_phase phase)</text>
<text text-anchor="start" x="391" y="-931.9" font-family="Helvetica,sans-Serif" font-size="12.00"># party_t owner_of(stake_t c)</text>
<text text-anchor="start" x="391" y="-918.9" font-family="Helvetica,sans-Serif" font-size="12.00"># virtual std::pair&lt; counter_t, bool &gt; round()</text>
<text text-anchor="start" x="391" y="-905.9" font-family="Helvetica,sans-Serif" font-size="12.00"># virtual std::pair&lt; counter_t, bool</text>
<text text-anchor="start" x="391" y="-892.9" font-family="Helvetica,sans-Serif" font-size="12.00"> &gt; protocol_round()=0</text>
</a>
</g>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="../../d6/d8a/classabstract__receive__protocol__simulator.html" target="_top" xlink:title=" ">
<polygon fill="white" stroke="black" points="544.5,-623 544.5,-842 809.5,-842 809.5,-623 544.5,-623"/>
<text text-anchor="middle" x="677" y="-828.4" font-family="Helvetica,sans-Serif" font-size="12.00">abstract_receive_protocol_simulator</text>
<polyline fill="none" stroke="black" points="544.5,-821 809.5,-821 "/>
<text text-anchor="start" x="552.5" y="-807.4" font-family="Helvetica,sans-Serif" font-size="12.00"># std::vector&lt; std::vector&lt; party</text>
<text text-anchor="start" x="552.5" y="-794.4" font-family="Helvetica,sans-Serif" font-size="12.00">_t &gt; &gt; requesters</text>
<polyline fill="none" stroke="black" points="544.5,-787 809.5,-787 "/>
<text text-anchor="start" x="552.5" y="-773.4" font-family="Helvetica,sans-Serif" font-size="12.00">+ abstract_receive_protocol_simulator</text>
<text text-anchor="start" x="552.5" y="-760.4" font-family="Helvetica,sans-Serif" font-size="12.00">(std::vector&lt; stake_t &gt; stakes)</text>
<text text-anchor="start" x="552.5" y="-747.4" font-family="Helvetica,sans-Serif" font-size="12.00">+ ~abstract_receive_protocol_simulator()</text>
<text text-anchor="start" x="552.5" y="-734.4" font-family="Helvetica,sans-Serif" font-size="12.00"># counter_t handle_all_requests()</text>
<text text-anchor="start" x="552.5" y="-721.4" font-family="Helvetica,sans-Serif" font-size="12.00"># virtual counter_t handle_requests</text>
<text text-anchor="start" x="552.5" y="-708.4" font-family="Helvetica,sans-Serif" font-size="12.00">(party_t i)=0</text>
<text text-anchor="start" x="552.5" y="-695.4" font-family="Helvetica,sans-Serif" font-size="12.00"># counter_t request(party_t requester)</text>
<text text-anchor="start" x="552.5" y="-682.4" font-family="Helvetica,sans-Serif" font-size="12.00"># counter_t make_requests()</text>
<text text-anchor="start" x="552.5" y="-669.4" font-family="Helvetica,sans-Serif" font-size="12.00"># virtual std::vector&lt; party_t &gt; get</text>
<text text-anchor="start" x="552.5" y="-656.4" font-family="Helvetica,sans-Serif" font-size="12.00">_request_targets(party_t requester)=0</text>
<text text-anchor="start" x="552.5" y="-643.4" font-family="Helvetica,sans-Serif" font-size="12.00"># virtual std::pair&lt; counter_t, bool</text>
<text text-anchor="start" x="552.5" y="-630.4" font-family="Helvetica,sans-Serif" font-size="12.00"> &gt; protocol_round() override</text>
</a>
</g>
</g>
<!-- Node1&#45;&gt;Node3 -->
<g id="edge2" class="edge">
<title>Node1&#45;&gt;Node3</title>
<path fill="none" stroke="midnightblue" d="M607.69,-876C613.24,-864.59 618.74,-853.28 624.07,-842.31"/>
<polygon fill="none" stroke="midnightblue" points="604.45,-874.65 603.23,-885.17 610.75,-877.71 604.45,-874.65"/>
</g>
<!-- Node7 -->
<g id="node7" class="node">
<title>Node7</title>
<g id="a_node7"><a xlink:href="../../da/d2c/classabstract__send__protocol__simulator.html" target="_top" xlink:title=" ">
<polygon fill="white" stroke="black" points="221.5,-616.5 221.5,-848.5 526.5,-848.5 526.5,-616.5 221.5,-616.5"/>
<text text-anchor="middle" x="374" y="-834.9" font-family="Helvetica,sans-Serif" font-size="12.00">abstract_send_protocol_simulator</text>
<polyline fill="none" stroke="black" points="221.5,-827.5 526.5,-827.5 "/>
<text text-anchor="start" x="229.5" y="-813.9" font-family="Helvetica,sans-Serif" font-size="12.00"># std::queue&lt; party_t &gt; to_send</text>
<text text-anchor="start" x="229.5" y="-800.9" font-family="Helvetica,sans-Serif" font-size="12.00"># std::function&lt; bool(bool, party</text>
<text text-anchor="start" x="229.5" y="-787.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t, party_t)&gt; forward</text>
<polyline fill="none" stroke="black" points="221.5,-780.5 526.5,-780.5 "/>
<text text-anchor="start" x="229.5" y="-766.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ abstract_send_protocol_simulator</text>
<text text-anchor="start" x="229.5" y="-753.9" font-family="Helvetica,sans-Serif" font-size="12.00">(std::vector&lt; stake_t &gt; stakes, std</text>
<text text-anchor="start" x="229.5" y="-740.9" font-family="Helvetica,sans-Serif" font-size="12.00">::function&lt; bool(bool, party_t, party</text>
<text text-anchor="start" x="229.5" y="-727.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t)&gt; forward=[](bool first_time, party</text>
<text text-anchor="start" x="229.5" y="-714.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t sender, party_t receiver) { return first_time;})</text>
<text text-anchor="start" x="229.5" y="-701.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ ~abstract_send_protocol_simulator()</text>
<text text-anchor="start" x="229.5" y="-688.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ virtual void set_sender(party_t</text>
<text text-anchor="start" x="229.5" y="-675.9" font-family="Helvetica,sans-Serif" font-size="12.00"> sender) override</text>
<text text-anchor="start" x="229.5" y="-662.9" font-family="Helvetica,sans-Serif" font-size="12.00"># virtual std::vector&lt; party_t &gt; get</text>
<text text-anchor="start" x="229.5" y="-649.9" font-family="Helvetica,sans-Serif" font-size="12.00">_targets_to_send(party_t sender)=0</text>
<text text-anchor="start" x="229.5" y="-636.9" font-family="Helvetica,sans-Serif" font-size="12.00"># virtual std::pair&lt; counter_t, bool</text>
<text text-anchor="start" x="229.5" y="-623.9" font-family="Helvetica,sans-Serif" font-size="12.00"> &gt; protocol_round() override</text>
</a>
</g>
</g>
<!-- Node1&#45;&gt;Node7 -->
<g id="edge6" class="edge">
<title>Node1&#45;&gt;Node7</title>
<path fill="none" stroke="midnightblue" d="M442.85,-875.99C438.42,-866.82 434.02,-857.71 429.71,-848.8"/>
<polygon fill="none" stroke="midnightblue" points="439.79,-877.69 447.29,-885.17 446.09,-874.65 439.79,-877.69"/>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../da/d73/classprotocol__simulator.html" target="_top" xlink:title="Abstract class for protocol simulators.">
<polygon fill="white" stroke="black" points="392,-1245.5 392,-1555.5 658,-1555.5 658,-1245.5 392,-1245.5"/>
<text text-anchor="middle" x="525" y="-1541.9" font-family="Helvetica,sans-Serif" font-size="12.00">protocol_simulator</text>
<polyline fill="none" stroke="black" points="392,-1534.5 658,-1534.5 "/>
<text text-anchor="start" x="400" y="-1520.9" font-family="Helvetica,sans-Serif" font-size="12.00"># party_t nr_parties</text>
<text text-anchor="start" x="400" y="-1507.9" font-family="Helvetica,sans-Serif" font-size="12.00"># round_t curr_round</text>
<text text-anchor="start" x="400" y="-1494.9" font-family="Helvetica,sans-Serif" font-size="12.00"># std::vector&lt; counter_t &gt; nr_messages</text>
<text text-anchor="start" x="400" y="-1481.9" font-family="Helvetica,sans-Serif" font-size="12.00"># std::vector&lt; round_t &gt; got_msg</text>
<polyline fill="none" stroke="black" points="392,-1474.5 658,-1474.5 "/>
<text text-anchor="start" x="400" y="-1460.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ protocol_simulator(party_t nr_parties)</text>
<text text-anchor="start" x="400" y="-1447.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ virtual ~protocol_simulator()</text>
<text text-anchor="start" x="400" y="-1434.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ virtual round_t get_latency()</text>
<text text-anchor="start" x="400" y="-1421.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ virtual party_t get_nr_parties(round_t r)</text>
<text text-anchor="start" x="400" y="-1408.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ party_t get_nr_parties()</text>
<text text-anchor="start" x="400" y="-1395.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ virtual bool all_got_msg()</text>
<text text-anchor="start" x="400" y="-1382.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ std::vector&lt; round_t &gt; get_got_msg()</text>
<text text-anchor="start" x="400" y="-1369.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool receive(party_t receiver)</text>
<text text-anchor="start" x="400" y="-1356.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool has_received(party_t receiver)</text>
<text text-anchor="start" x="400" y="-1343.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ virtual void set_sender(party_t sender)</text>
<text text-anchor="start" x="400" y="-1330.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ virtual std::vector&lt; counter_t &gt;</text>
<text text-anchor="start" x="400" y="-1317.9" font-family="Helvetica,sans-Serif" font-size="12.00"> get_nr_messages_per_round()</text>
<text text-anchor="start" x="400" y="-1304.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ virtual counter_t get_nr_messages()</text>
<text text-anchor="start" x="400" y="-1291.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ virtual bool execute_protocol(round</text>
<text text-anchor="start" x="400" y="-1278.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t bound=ROUND_T_MAX)</text>
<text text-anchor="start" x="400" y="-1265.9" font-family="Helvetica,sans-Serif" font-size="12.00"># virtual std::pair&lt; counter_t, bool</text>
<text text-anchor="start" x="400" y="-1252.9" font-family="Helvetica,sans-Serif" font-size="12.00"> &gt; round()=0</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M525,-1235.31C525,-1226.43 525,-1217.5 525,-1208.62"/>
<polygon fill="none" stroke="midnightblue" points="521.5,-1235.33 525,-1245.33 528.5,-1235.33 521.5,-1235.33"/>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="../../d2/d21/classreceiver__protocol__simulator.html" target="_top" xlink:title=" ">
<polygon fill="white" stroke="black" points="549.5,-289 549.5,-547 804.5,-547 804.5,-289 549.5,-289"/>
<text text-anchor="middle" x="677" y="-533.4" font-family="Helvetica,sans-Serif" font-size="12.00">receiver_protocol_simulator</text>
<polyline fill="none" stroke="black" points="549.5,-526 804.5,-526 "/>
<text text-anchor="start" x="557.5" y="-512.4" font-family="Helvetica,sans-Serif" font-size="12.00"># std::mt19937_64 * re</text>
<text text-anchor="start" x="557.5" y="-499.4" font-family="Helvetica,sans-Serif" font-size="12.00"># std::uniform_int_distribution&lt; party</text>
<text text-anchor="start" x="557.5" y="-486.4" font-family="Helvetica,sans-Serif" font-size="12.00">_t &gt; unif_coin</text>
<text text-anchor="start" x="557.5" y="-473.4" font-family="Helvetica,sans-Serif" font-size="12.00"># std::function&lt; size_t(party_t)&gt;</text>
<text text-anchor="start" x="557.5" y="-460.4" font-family="Helvetica,sans-Serif" font-size="12.00"> get_nr_requests</text>
<text text-anchor="start" x="557.5" y="-447.4" font-family="Helvetica,sans-Serif" font-size="12.00"># std::function&lt; size_t(party_t)&gt;</text>
<text text-anchor="start" x="557.5" y="-434.4" font-family="Helvetica,sans-Serif" font-size="12.00"> get_nr_requests_to_handle</text>
<polyline fill="none" stroke="black" points="549.5,-427 804.5,-427 "/>
<text text-anchor="start" x="557.5" y="-413.4" font-family="Helvetica,sans-Serif" font-size="12.00">+ receiver_protocol_simulator(std</text>
<text text-anchor="start" x="557.5" y="-400.4" font-family="Helvetica,sans-Serif" font-size="12.00">::function&lt; size_t(party_t)&gt; get</text>
<text text-anchor="start" x="557.5" y="-387.4" font-family="Helvetica,sans-Serif" font-size="12.00">_nr_requests, std::function&lt; size</text>
<text text-anchor="start" x="557.5" y="-374.4" font-family="Helvetica,sans-Serif" font-size="12.00">_t(party_t)&gt; get_nr_requests_to_handle,</text>
<text text-anchor="start" x="557.5" y="-361.4" font-family="Helvetica,sans-Serif" font-size="12.00"> std::vector&lt; stake_t &gt; stakes)</text>
<text text-anchor="start" x="557.5" y="-348.4" font-family="Helvetica,sans-Serif" font-size="12.00">+ ~receiver_protocol_simulator()</text>
<text text-anchor="start" x="557.5" y="-335.4" font-family="Helvetica,sans-Serif" font-size="12.00"># party_t request(party_t requester)</text>
<text text-anchor="start" x="557.5" y="-322.4" font-family="Helvetica,sans-Serif" font-size="12.00"># counter_t handle_requests(party_t i)</text>
<text text-anchor="start" x="557.5" y="-309.4" font-family="Helvetica,sans-Serif" font-size="12.00"># std::vector&lt; party_t &gt; get_request</text>
<text text-anchor="start" x="557.5" y="-296.4" font-family="Helvetica,sans-Serif" font-size="12.00">_targets(party_t requester)</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node4 -->
<g id="edge3" class="edge">
<title>Node3&#45;&gt;Node4</title>
<path fill="none" stroke="midnightblue" d="M677,-612.55C677,-591.13 677,-568.72 677,-547.05"/>
<polygon fill="none" stroke="midnightblue" points="673.5,-612.64 677,-622.64 680.5,-612.64 673.5,-612.64"/>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="../../d7/d76/classhybrid__k__out__protocol__simulator.html" target="_top" xlink:title=" ">
<polygon fill="white" stroke="black" points="467.5,-0.5 467.5,-219.5 768.5,-219.5 768.5,-0.5 467.5,-0.5"/>
<text text-anchor="middle" x="618" y="-205.9" font-family="Helvetica,sans-Serif" font-size="12.00">hybrid_k_out_protocol_simulator</text>
<polyline fill="none" stroke="black" points="467.5,-198.5 768.5,-198.5 "/>
<text text-anchor="start" x="475.5" y="-184.9" font-family="Helvetica,sans-Serif" font-size="12.00"># std::function&lt; size_t(party_t)&gt;</text>
<text text-anchor="start" x="475.5" y="-171.9" font-family="Helvetica,sans-Serif" font-size="12.00"> get_nr_requests</text>
<text text-anchor="start" x="475.5" y="-158.9" font-family="Helvetica,sans-Serif" font-size="12.00"># std::function&lt; size_t(party_t)&gt;</text>
<text text-anchor="start" x="475.5" y="-145.9" font-family="Helvetica,sans-Serif" font-size="12.00"> get_nr_requests_to_handle</text>
<polyline fill="none" stroke="black" points="467.5,-138.5 768.5,-138.5 "/>
<text text-anchor="start" x="475.5" y="-124.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ hybrid_k_out_protocol_simulator</text>
<text text-anchor="start" x="475.5" y="-111.9" font-family="Helvetica,sans-Serif" font-size="12.00">(std::function&lt; size_t(party_t)&gt;</text>
<text text-anchor="start" x="475.5" y="-98.9" font-family="Helvetica,sans-Serif" font-size="12.00"> get_nr_targets, std::function&lt; size</text>
<text text-anchor="start" x="475.5" y="-85.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t(party_t)&gt; imitation_function, std</text>
<text text-anchor="start" x="475.5" y="-72.9" font-family="Helvetica,sans-Serif" font-size="12.00">::function&lt; size_t(party_t)&gt; get_nr_requests,</text>
<text text-anchor="start" x="475.5" y="-59.9" font-family="Helvetica,sans-Serif" font-size="12.00"> std::function&lt; size_t(party_t)&gt; get_nr_requests</text>
<text text-anchor="start" x="475.5" y="-46.9" font-family="Helvetica,sans-Serif" font-size="12.00">_to_handle, std::vector&lt; stake_t &gt; stakes)</text>
<text text-anchor="start" x="475.5" y="-33.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ virtual ~hybrid_k_out_protocol_simulator()</text>
<text text-anchor="start" x="475.5" y="-20.9" font-family="Helvetica,sans-Serif" font-size="12.00"># virtual std::pair&lt; counter_t, bool</text>
<text text-anchor="start" x="475.5" y="-7.9" font-family="Helvetica,sans-Serif" font-size="12.00"> &gt; protocol_round() override</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node5 -->
<g id="edge4" class="edge">
<title>Node4&#45;&gt;Node5</title>
<path fill="none" stroke="midnightblue" d="M650.31,-278.59C646.51,-258.85 642.64,-238.79 638.96,-219.73"/>
<polygon fill="none" stroke="midnightblue" points="646.91,-279.4 652.24,-288.56 653.78,-278.08 646.91,-279.4"/>
</g>
<!-- Node6 -->
<g id="node6" class="node">
<title>Node6</title>
<g id="a_node6"><a xlink:href="../../d0/d86/classhybrid__protocol__simulator.html" target="_top" xlink:title=" ">
<polygon fill="white" stroke="black" points="99.5,-26.5 99.5,-193.5 390.5,-193.5 390.5,-26.5 99.5,-26.5"/>
<text text-anchor="middle" x="245" y="-179.9" font-family="Helvetica,sans-Serif" font-size="12.00">hybrid_protocol_simulator</text>
<polyline fill="none" stroke="black" points="99.5,-172.5 390.5,-172.5 "/>
<text text-anchor="middle" x="245" y="-158.9" font-family="Helvetica,sans-Serif" font-size="12.00"> </text>
<polyline fill="none" stroke="black" points="99.5,-151.5 390.5,-151.5 "/>
<text text-anchor="start" x="107.5" y="-137.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ hybrid_protocol_simulator(std::</text>
<text text-anchor="start" x="107.5" y="-124.9" font-family="Helvetica,sans-Serif" font-size="12.00">function&lt; double(party_t, party_t)</text>
<text text-anchor="start" x="107.5" y="-111.9" font-family="Helvetica,sans-Serif" font-size="12.00">&gt; send_prob, std::function&lt; size_t</text>
<text text-anchor="start" x="107.5" y="-98.9" font-family="Helvetica,sans-Serif" font-size="12.00">(party_t)&gt; get_nr_requests, std::function</text>
<text text-anchor="start" x="107.5" y="-85.9" font-family="Helvetica,sans-Serif" font-size="12.00">&lt; size_t(party_t)&gt; get_nr_requests_to_handle,</text>
<text text-anchor="start" x="107.5" y="-72.9" font-family="Helvetica,sans-Serif" font-size="12.00"> std::vector&lt; stake_t &gt; stakes)</text>
<text text-anchor="start" x="107.5" y="-59.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ ~hybrid_protocol_simulator()</text>
<text text-anchor="start" x="107.5" y="-46.9" font-family="Helvetica,sans-Serif" font-size="12.00"># virtual std::pair&lt; counter_t, bool</text>
<text text-anchor="start" x="107.5" y="-33.9" font-family="Helvetica,sans-Serif" font-size="12.00"> &gt; protocol_round() override</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node6 -->
<g id="edge5" class="edge">
<title>Node4&#45;&gt;Node6</title>
<path fill="none" stroke="midnightblue" d="M570.4,-281.71C560.62,-272.48 550.44,-263.77 540,-256 508.07,-232.24 493.95,-237.07 458,-220 436.05,-209.58 413.01,-198.22 390.52,-186.91"/>
<polygon fill="none" stroke="midnightblue" points="568.19,-284.43 577.81,-288.87 573.05,-279.4 568.19,-284.43"/>
</g>
<!-- Node8 -->
<g id="node8" class="node">
<title>Node8</title>
<g id="a_node8"><a xlink:href="../../de/d66/classk__out__protocol__simulator.html" target="_top" xlink:title=" ">
<polygon fill="white" stroke="black" points="272.5,-256.5 272.5,-579.5 531.5,-579.5 531.5,-256.5 272.5,-256.5"/>
<text text-anchor="middle" x="402" y="-565.9" font-family="Helvetica,sans-Serif" font-size="12.00">k_out_protocol_simulator</text>
<polyline fill="none" stroke="black" points="272.5,-558.5 531.5,-558.5 "/>
<text text-anchor="start" x="280.5" y="-544.9" font-family="Helvetica,sans-Serif" font-size="12.00"># std::mt19937_64 * re</text>
<text text-anchor="start" x="280.5" y="-531.9" font-family="Helvetica,sans-Serif" font-size="12.00"># std::function&lt; size_t(party_t)&gt;</text>
<text text-anchor="start" x="280.5" y="-518.9" font-family="Helvetica,sans-Serif" font-size="12.00"> get_nr_targets</text>
<text text-anchor="start" x="280.5" y="-505.9" font-family="Helvetica,sans-Serif" font-size="12.00"># std::function&lt; size_t(party_t)&gt;</text>
<text text-anchor="start" x="280.5" y="-492.9" font-family="Helvetica,sans-Serif" font-size="12.00"> imitation_function</text>
<text text-anchor="start" x="280.5" y="-479.9" font-family="Helvetica,sans-Serif" font-size="12.00"># std::list&lt; std::pair&lt; size_t, party</text>
<text text-anchor="start" x="280.5" y="-466.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t &gt; &gt; sample_domain</text>
<text text-anchor="start" x="280.5" y="-453.9" font-family="Helvetica,sans-Serif" font-size="12.00"># size_t total_imitated_nodes</text>
<text text-anchor="start" x="280.5" y="-440.9" font-family="Helvetica,sans-Serif" font-size="12.00"># size_t histogram_interval_size</text>
<text text-anchor="start" x="280.5" y="-427.9" font-family="Helvetica,sans-Serif" font-size="12.00"># std::map&lt; party_t, size_t &gt; histogram</text>
<polyline fill="none" stroke="black" points="272.5,-420.5 531.5,-420.5 "/>
<text text-anchor="start" x="280.5" y="-406.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ k_out_protocol_simulator(std::function</text>
<text text-anchor="start" x="280.5" y="-393.9" font-family="Helvetica,sans-Serif" font-size="12.00">&lt; size_t(party_t)&gt; get_nr_targets, std</text>
<text text-anchor="start" x="280.5" y="-380.9" font-family="Helvetica,sans-Serif" font-size="12.00">::function&lt; size_t(party_t)&gt; imitation</text>
<text text-anchor="start" x="280.5" y="-367.9" font-family="Helvetica,sans-Serif" font-size="12.00">_function, std::vector&lt; stake_t &gt; stakes)</text>
<text text-anchor="start" x="280.5" y="-354.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ virtual ~k_out_protocol_simulator()</text>
<text text-anchor="start" x="280.5" y="-341.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ std::function&lt; size_t(party_t)&gt;</text>
<text text-anchor="start" x="280.5" y="-328.9" font-family="Helvetica,sans-Serif" font-size="12.00"> get_get_nr_targets()</text>
<text text-anchor="start" x="280.5" y="-315.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ std::function&lt; size_t(party_t)&gt;</text>
<text text-anchor="start" x="280.5" y="-302.9" font-family="Helvetica,sans-Serif" font-size="12.00"> get_imitation_function()</text>
<text text-anchor="start" x="280.5" y="-289.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool all_got_msg()</text>
<text text-anchor="start" x="280.5" y="-276.9" font-family="Helvetica,sans-Serif" font-size="12.00"># std::vector&lt; party_t &gt; get_targets</text>
<text text-anchor="start" x="280.5" y="-263.9" font-family="Helvetica,sans-Serif" font-size="12.00">_to_send(party_t sender)</text>
</a>
</g>
</g>
<!-- Node7&#45;&gt;Node8 -->
<g id="edge7" class="edge">
<title>Node7&#45;&gt;Node8</title>
<path fill="none" stroke="midnightblue" d="M385.22,-606.26C386.01,-597.51 386.8,-588.62 387.6,-579.71"/>
<polygon fill="none" stroke="midnightblue" points="381.71,-606.2 384.31,-616.47 388.69,-606.82 381.71,-606.2"/>
</g>
<!-- Node9 -->
<g id="node9" class="node">
<title>Node9</title>
<g id="a_node9"><a xlink:href="../../df/d1d/classsend__protocol__simulator.html" target="_top" xlink:title=" ">
<polygon fill="white" stroke="black" points="0,-315 0,-521 254,-521 254,-315 0,-315"/>
<text text-anchor="middle" x="127" y="-507.4" font-family="Helvetica,sans-Serif" font-size="12.00">send_protocol_simulator</text>
<polyline fill="none" stroke="black" points="0,-500 254,-500 "/>
<text text-anchor="start" x="8" y="-486.4" font-family="Helvetica,sans-Serif" font-size="12.00"># std::mt19937_64 * re</text>
<text text-anchor="start" x="8" y="-473.4" font-family="Helvetica,sans-Serif" font-size="12.00"># std::uniform_real_distribution&lt;</text>
<text text-anchor="start" x="8" y="-460.4" font-family="Helvetica,sans-Serif" font-size="12.00"> double &gt; unif</text>
<text text-anchor="start" x="8" y="-447.4" font-family="Helvetica,sans-Serif" font-size="12.00"># std::function&lt; double(party_t, party</text>
<text text-anchor="start" x="8" y="-434.4" font-family="Helvetica,sans-Serif" font-size="12.00">_t)&gt; send_prob</text>
<polyline fill="none" stroke="black" points="0,-427 254,-427 "/>
<text text-anchor="start" x="8" y="-413.4" font-family="Helvetica,sans-Serif" font-size="12.00">+ send_protocol_simulator(std::function</text>
<text text-anchor="start" x="8" y="-400.4" font-family="Helvetica,sans-Serif" font-size="12.00">&lt; double(party_t, party_t)&gt; send_prob,</text>
<text text-anchor="start" x="8" y="-387.4" font-family="Helvetica,sans-Serif" font-size="12.00"> std::vector&lt; stake_t &gt; stakes)</text>
<text text-anchor="start" x="8" y="-374.4" font-family="Helvetica,sans-Serif" font-size="12.00">+ ~send_protocol_simulator()</text>
<text text-anchor="start" x="8" y="-361.4" font-family="Helvetica,sans-Serif" font-size="12.00"># bool send(party_t sender, party</text>
<text text-anchor="start" x="8" y="-348.4" font-family="Helvetica,sans-Serif" font-size="12.00">_t receiver)</text>
<text text-anchor="start" x="8" y="-335.4" font-family="Helvetica,sans-Serif" font-size="12.00"># virtual std::vector&lt; party_t &gt; get</text>
<text text-anchor="start" x="8" y="-322.4" font-family="Helvetica,sans-Serif" font-size="12.00">_targets_to_send(party_t sender)</text>
</a>
</g>
</g>
<!-- Node7&#45;&gt;Node9 -->
<g id="edge9" class="edge">
<title>Node7&#45;&gt;Node9</title>
<path fill="none" stroke="midnightblue" d="M276.67,-608.37C253.84,-579.48 229.76,-549 207.74,-521.15"/>
<polygon fill="none" stroke="midnightblue" points="274.13,-610.79 283.08,-616.47 279.62,-606.45 274.13,-610.79"/>
</g>
<!-- Node8&#45;&gt;Node5 -->
<g id="edge8" class="edge">
<title>Node8&#45;&gt;Node5</title>
<path fill="none" stroke="midnightblue" d="M521.32,-247.96C528.07,-238.4 534.76,-228.92 541.28,-219.68"/>
<polygon fill="none" stroke="midnightblue" points="518.28,-246.19 515.38,-256.38 524,-250.23 518.28,-246.19"/>
</g>
<!-- Node9&#45;&gt;Node6 -->
<g id="edge10" class="edge">
<title>Node9&#45;&gt;Node6</title>
<path fill="none" stroke="midnightblue" d="M170.22,-304.92C184.38,-268.2 199.85,-228.07 213.03,-193.9"/>
<polygon fill="none" stroke="midnightblue" points="166.79,-304.09 166.46,-314.68 173.32,-306.61 166.79,-304.09"/>
</g>
</g>
</svg>
